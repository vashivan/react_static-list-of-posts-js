{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","id","body","CommentList","comments","map","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCJGC,G,MAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,GAAIH,EAAlB,EAAkBA,KAAMD,EAAxB,EAAwBA,MAAOK,EAA/B,EAA+BA,KAA/B,OACzB,sBAAKP,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEtC,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGA,OAIL,qBAAKF,UAAU,oBAAf,SACGO,MAf6BD,KCEvBE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKT,UAAU,cAAf,SACGS,EAASC,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQC,UCFrCK,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QAEtC,8BACG,eAEAD,EAAKb,MAAQ,cAAC,EAAD,CAAUA,KAAMa,EAAKb,aAIvC,mBAAGC,UAAU,iBAAb,SACGY,EAAKL,OAER,uBAE0B,IAAzBK,EAAKH,SAASK,OACX,mBAAG,UAAQ,oBAAX,6BACA,cAAC,EAAD,CAAaL,SAAUG,EAAKH,gBCrBvBM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMN,KAAI,SAAAE,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKN,UCWtC,IAAMU,EAAQC,EAAgBP,KAAI,SAAAE,GAAI,kCACjCA,GADiC,IAEpCb,MAXmBmB,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAImB,IAAWnB,EAAKO,OAC/C,MAULG,UAPsBY,EAOGT,EAAKN,GANvBgB,EAAmBC,QAAO,SAAAlB,GAAO,OAAIgB,IAAWhB,EAAQgB,aADjE,IAAwBA,EALHH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1da30fa0.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment: { id, name, email, body } }) => (\n  <div className=\"CommentInfo\" key={id}>\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {post.user && <UserInfo user={post.user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    <hr />\n\n    {post.comments.length === 0\n      ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      : <CommentList comments={post.comments} />\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => userId === user.id)\n    || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => postId === comment.postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}